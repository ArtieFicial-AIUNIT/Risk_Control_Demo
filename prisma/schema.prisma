// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

enum CommodityTypes {
  DAIRY
  HONEY
}

enum RexStatus {
  DRAFT
  IN_PROGRESS
  ON_HOLD
  READY_TO_PRINT
}

enum CertificateStatus {
  DRAFT
  COMPLETE
}

model Rex {
  id            Int             @id @default(autoincrement())
  rexNumber     String          @unique
  clientRef     String?
  commodityType CommodityTypes?
  rexStatus     RexStatus       @default(DRAFT)
  products      Product[]
  exportCountry Country?        @relation(fields: [countryId], references: [id])
  consignee     String?
  certificate   Certificate?    @relation(fields: [certificateId], references: [id])
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  history       History[]
  dairyOptions  DairyOptions?   @relation(fields: [dairyOptionsId], references: [id])

  countryId      Int?
  dairyOptionsId Int? @unique
  certificateId  Int? @unique
}

model DairyOptions {
  id                Int     @id @default(autoincrement())
  usesQuota         Boolean @default(false)
  usesImportedDairy Boolean @default(false)
  Rex               Rex?
}

model Product {
  id                          Int             @id @default(autoincrement())
  productItem                 ProductItem     @relation(fields: [productItemId], references: [id])
  category                    ProductCategory @relation(fields: [categoryId], references: [id])
  packedIn                    PackType?       @relation(fields: [packedInId], references: [id], name: "PACKED_IN")
  ahecc                       Ahecc           @relation(fields: [aheccId], references: [id])
  netWeight                   Float           @default(0)
  netWeightUnit               UnitOfMeasure?  @relation(fields: [netWeightUnitId], references: [id], name: "NET_WEIGHT_UNIT")
  grossWeight                 Float           @default(0)
  grossWeightUnit             UnitOfMeasure?  @relation(fields: [grossWeightUnitId], references: [id], name: "GROSS_WEIGHT_UNIT")
  outerPackaging              PackType?       @relation(fields: [outerPackagingId], references: [id], name: "OUTER_PACKAGING")
  quantity                    Int             @default(0)
  individualPackageWeight     Float           @default(0)
  individualPackageWeightUnit UnitOfMeasure?  @relation(fields: [individualPackageWeightUnitId], references: [id], name: "INDIVIDUAL_PACKAGE_WEIGHT_UNIT")
  shippingMarks               String          @default("")

  productItemId                 Int
  categoryId                    Int
  packedInId                    Int
  aheccId                       Int
  netWeightUnitId               Int?
  grossWeightUnitId             Int?
  outerPackagingId              Int?
  individualPackageWeightUnitId Int?

  Rex   Rex? @relation(fields: [rexId], references: [id])
  rexId Int?
}

model Certificate {
  id                Int               @id @default(autoincrement())
  certificateNumber String
  dateIssued        DateTime
  placeIssued       String
  status            CertificateStatus
  consigneeName     String
  consigneeAddress  String
  exporterName      String
  exporterAddress   String
  dateOfDeparture   DateTime
  portOfLoading     String
  portOfDischarge   String
  declaration       String
  Rex               Rex?
}

model History {
  id        Int       @id @default(autoincrement())
  rexStatus RexStatus
  date      DateTime  @default(now())
  user      String
  action    String
  Rex       Rex?      @relation(fields: [rexId], references: [id])
  rexId     Int?
}

// Static (ish) data grabbed form existing APIs
model Ahecc {
  id      Int       @id @default(autoincrement())
  value   String
  label   String
  Product Product[]
}

model PackType {
  id                     Int       @id @default(autoincrement())
  value                  String
  label                  String
  Product_packedIn       Product[] @relation(name: "PACKED_IN")
  Product_outerPAckaging Product[] @relation(name: "OUTER_PACKAGING")
}

model Country {
  id    Int    @id @default(autoincrement())
  value String
  label String
  Rex   Rex[]
}

model ProductCategory {
  id      Int       @id @default(autoincrement())
  value   String
  label   String
  Product Product[]
}

model ProductItem {
  id            Int            @id @default(autoincrement())
  productId     Int            @unique
  value         String
  label         String
  commodityType CommodityTypes
  Product       Product[]
}

model UnitOfMeasure {
  id                  Int       @id @default(autoincrement())
  value               String
  label               String
  Product_netWeight   Product[] @relation(name: "NET_WEIGHT_UNIT")
  Product_grossWeight Product[] @relation(name: "GROSS_WEIGHT_UNIT")
  Product_individual  Product[] @relation(name: "INDIVIDUAL_PACKAGE_WEIGHT_UNIT")
}
